import Head from "next/head";
import Image from "next/image";
import Bannar from "../component/banner";
import Cart from "../component/Cart";
import styles from "../styles/Home.module.css";
import { fetchCoffeeStores } from "../lib/coffeeStore";
import usegeoLocation from "../hooks/use-geoLocation";
import { useEffect } from "react";
import { useState, useContext } from "react";
import { ACTION_TYPE, Storecontext } from "../store/confeeStore";

export async function getStaticProps() {
  const data = await fetchCoffeeStores();

  return {
    props: {
      coffeeStore: data,
    },
  };
}
export default function Home(props) {
  const { erroMsg, handleTrackLocation, isFindingLocation } = usegeoLocation();
  // const [coffeeStore, setCoffeeStore] = useState("");
  const [coffeeStoreError, setCoffeeStoreError] = useState(null);
  const { dispatch, state } = useContext(Storecontext);

  const { latLog, coffeeStores } = state;
  useEffect(() => {
    async function fetchData() {
      if (latLog) {
        try {
          const fetchedCoffeeStores = await fetch(
            `/api/getCoffeeStoresByLocation?latLong=${latLog}&limit=50`
          );
          const coffeeStores = await fetchedCoffeeStores.json();
          dispatch({
            type: ACTION_TYPE.SET_COFFEE_STORE,
            payload: { coffeeStores },
          });
        } catch (error) {
          setCoffeeStoreError(error.message);
        }
      }
    }
    fetchData();
  }, [latLog]);

  const onHandalrBannarClick = () => {
    handleTrackLocation();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Cofee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <Bannar
          buttonText={isFindingLocation ? "loading...." : "View stores nearby"}
          handlOnClick={onHandalrBannarClick}
        />
        {erroMsg && <p>Somthing Went Wrong {erroMsg}</p>}
        {coffeeStoreError && <p>Somthing Went Wrong {coffeeStoreError}</p>}
        <div className={styles.heroImage}>
          <Image
            src="/static/hero-image.png"
            width={700}
            height={400}
            alt="hero Image"
          />
        </div>
        {coffeeStores.length > 0 && (
          <>
            <h2 className={styles.heading2}>Cofee Store Near By me</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map((cardDatas) => (
                <Cart
                  key={cardDatas.id}
                  href={`/coffee-store/${cardDatas.id}`}
                  imgUrl={
                    cardDatas.imgUrl ||
                    "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
                  }
                  name={cardDatas.name}
                />
              ))}
            </div>
          </>
        )}
        {props.coffeeStore.length > 0 && (
          <>
            <h2 className={styles.heading2}>Tornado Coffee Store</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStore.map((cardDatas) => (
                <Cart
                  key={cardDatas.id}
                  href={`/coffee-store/${cardDatas.id}`}
                  imgUrl={
                    cardDatas.imgUrl ||
                    "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
                  }
                  name={cardDatas.name}
                />
              ))}
            </div>
          </>
        )}
      </main>
    </div>
  );
}
